{"version":3,"sources":["tasks.js","NewTask.js","TaskDetailsView.js","TaskCard.js","StatusColumn.js","DeleteConfirmModal.js","NewGroupModal.js","GroupItem.js","ManageGroupsModal.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["colors","status","tasks","id","name","description","priority","NewTask","props","toggleNewTask","modal","emptyFields","useState","newTaskValues","setNewTaskValues","submitActive","setSubmitActive","toggle","Modal","isOpen","className","ModalHeader","ModalBody","Form","FormGroup","row","Col","sm","Label","Input","type","value","onChange","e","target","placeholder","text","console","log","ModalFooter","Button","color","onClick","addNewTask","Math","random","disabled","TaskDetailsView","changeTaskValues","toggleDeleteConfirm","taskDetails","setTaskDetails","openTaskView","editDisabled","setEditDisabled","changeCurrentTask","val","TaskCard","task","idx","taskIdx","changeTaskStatus","changeTaskQueue","openTask","taskGroup","i","ListGroupItem","Row","xs","lg","Low","Mid","High","outline","size","pill","length","rightButtonDisplays","StatusColumn","taskList","md","ListGroup","map","key","DeleteConfirmModal","removeTask","openDeleteConfirm","NewGroupModal","setTaskList","setTaskGroup","newGroupModal","setNewGroupModal","newGroupName","setNewGroupName","newTemp","newTask","push","GroupItem","el","changeOrder","removeGroup","ManageGroupsModal","manageModal","setManageModal","dif","arr1","arr2","arr3","splice","Board","setModal","setOpenTaskView","setOpenDeleteConfirm","obj","arr","toggleTaskDetail","diff","movedTask","changedTaskList","filter","Container","fluid","href","changedTask","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.853a1e3b.chunk.js","sourcesContent":["export const colors = ['danger', 'warning', 'info', 'success'];\nexport const status = ['Todo', 'In Progress', 'Review', 'Done']\nexport const tasks = [\n        [\n            {\n            id: 't1',\n            name: 'Create tasks list',\n            description: 'Lists\\n' +\n                'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\n                'Aliquam tincidunt mauris eu risus.\\n' +\n                'Vestibulum auctor dapibus neque.\\n' +\n                'Nunc dignissim risus id metus.\\n' +\n                'Cras ornare tristique elit.\\n' +\n                'Vivamus vestibulum ntulla nec ante.\\n' +\n                'Praesent placerat risus quis eros.\\n' +\n                'Fusce pellentesque suscipit nibh.\\n' +\n                'Integer vitae libero ac risus egestas placerat.\\n' +\n                'Vestibulum commodo felis quis tortor.\\n' +\n                'Ut aliquam sollicitudin leo.\\n' +\n                'Cras iaculis ultricies nulla.\\n' +\n                'Donec quis dui at dolor tempor interdum.',\n            status: 1,\n            priority: 'Low'\n            },\n            {\n                id: 't6',\n                name: 'Edit item functionality',\n                description: 'Lists\\n' +\n                    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\n                    'Aliquam tincidunt mauris eu risus.\\n' +\n                    'Vestibulum auctor dapibus neque.\\n' +\n                    'Nunc dignissim risus id metus.\\n' +\n                    'Cras ornare tristique elit.\\n' +\n                    'Vivamus vestibulum ntulla nec ante.\\n' +\n                    'Praesent placerat risus quis eros.\\n' +\n                    'Fusce pellentesque suscipit nibh.\\n' +\n                    'Integer vitae libero ac risus egestas placerat.\\n' +\n                    'Vestibulum commodo felis quis tortor.\\n' +\n                    'Ut aliquam sollicitudin leo.\\n' +\n                    'Cras iaculis ultricies nulla.\\n' +\n                    'Donec quis dui at dolor tempor interdum.',\n                status: 1,\n                priority: 'High'\n            }\n        ],\n        [\n            {\n                id: 't2',\n                name: 'Create Board file',\n                description: 'Lists\\n' +\n                    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\n                    'Aliquam tincidunt mauris eu risus.\\n' +\n                    'Vestibulum auctor dapibus neque.\\n' +\n                    'Nunc dignissim risus id metus.\\n' +\n                    'Cras ornare tristique elit.\\n' +\n                    'Vivamus vestibulum ntulla nec ante.\\n' +\n                    'Praesent placerat risus quis eros.\\n' +\n                    'Fusce pellentesque suscipit nibh.\\n' +\n                    'Integer vitae libero ac risus egestas placerat.\\n' +\n                    'Vestibulum commodo felis quis tortor.\\n' +\n                    'Ut aliquam sollicitudin leo.\\n' +\n                    'Cras iaculis ultricies nulla.\\n' +\n                    'Donec quis dui at dolor tempor interdum.',\n                priority: 'Mid'\n            },\n            {\n                id: 't4',\n                name: 'Create status table',\n                description: 'Lists\\n' +\n                    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\n                    'Aliquam tincidunt mauris eu risus.\\n' +\n                    'Vestibulum auctor dapibus neque.\\n' +\n                    'Nunc dignissim risus id metus.\\n' +\n                    'Cras ornare tristique elit.\\n' +\n                    'Vivamus vestibulum ntulla nec ante.\\n' +\n                    'Praesent placerat risus quis eros.\\n' +\n                    'Fusce pellentesque suscipit nibh.\\n' +\n                    'Integer vitae libero ac risus egestas placerat.\\n' +\n                    'Vestibulum commodo felis quis tortor.\\n' +\n                    'Ut aliquam sollicitudin leo.\\n' +\n                    'Cras iaculis ultricies nulla.\\n' +\n                    'Donec quis dui at dolor tempor interdum.',\n                priority: 'High'\n            }\n        ],\n        [\n            {\n                id: 't5',\n                name: 'Remove item functionality',\n                description: 'Lists\\n' +\n                    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\n                    'Aliquam tincidunt mauris eu risus.\\n' +\n                    'Vestibulum auctor dapibus neque.\\n' +\n                    'Nunc dignissim risus id metus.\\n' +\n                    'Cras ornare tristique elit.\\n' +\n                    'Vivamus vestibulum ntulla nec ante.\\n' +\n                    'Praesent placerat risus quis eros.\\n' +\n                    'Fusce pellentesque suscipit nibh.\\n' +\n                    'Integer vitae libero ac risus egestas placerat.\\n' +\n                    'Vestibulum commodo felis quis tortor.\\n' +\n                    'Ut aliquam sollicitudin leo.\\n' +\n                    'Cras iaculis ultricies nulla.\\n' +\n                    'Donec quis dui at dolor tempor interdum.',\n                status: 3,\n                priority: 'High'\n            }\n        ],\n        [\n            {\n                id: 't3',\n                name: 'Create new task file',\n                description: 'Lists\\n' +\n                    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\n                    'Aliquam tincidunt mauris eu risus.\\n' +\n                    'Vestibulum auctor dapibus neque.\\n' +\n                    'Nunc dignissim risus id metus.\\n' +\n                    'Cras ornare tristique elit.\\n' +\n                    'Vivamus vestibulum ntulla nec ante.\\n' +\n                    'Praesent placerat risus quis eros.\\n' +\n                    'Fusce pellentesque suscipit nibh.\\n' +\n                    'Integer vitae libero ac risus egestas placerat.\\n' +\n                    'Vestibulum commodo felis quis tortor.\\n' +\n                    'Ut aliquam sollicitudin leo.\\n' +\n                    'Cras iaculis ultricies nulla.\\n' +\n                    'Donec quis dui at dolor tempor interdum.',\n                status: 4,\n                priority: 'Low'\n            }\n        ]\n    ];\n\n\n","import React, {useState} from 'react';\nimport {Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\n\nfunction NewTask(props) {\n\n    const {\n        toggleNewTask,\n        modal,\n    } = props;\n\n    const emptyFields = {name: '', description: '', priority: 'Low'}\n    const [newTaskValues, setNewTaskValues] = useState(emptyFields);\n    const [submitActive, setSubmitActive] = useState(false)\n\n    const inputTaskName = (name) => {\n        setNewTaskValues({...newTaskValues, name: name});\n        if (newTaskValues.name && newTaskValues.description) {\n            setSubmitActive(true)\n        }\n    };\n\n    const inputTaskDescription = (text) => {\n        setNewTaskValues({...newTaskValues, description: text});\n        if (newTaskValues.name && newTaskValues.description) {\n            setSubmitActive(true)\n        }\n    };\n\n    const saveNewTask = () => {\n        props.addNewTask({...newTaskValues, status: 1, id: Math.random()});\n        setNewTaskValues(emptyFields);\n    };\n\n    const toggle = () => {\n        setNewTaskValues(emptyFields);\n        toggleNewTask();\n    };\n\n    const selectPriority = (value) => {\n        setNewTaskValues({...newTaskValues, priority: value});\n        console.log(newTaskValues)\n    }\n\n    return (\n        <div>\n            <Modal isOpen={modal} toggle={toggle} className=' modal-big'>\n                <ModalHeader toggle={toggle}>Create new task</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup row>\n                            <Col sm=\"2\">\n                                <Label className=\"float-right\">Title</Label>\n                            </Col>\n                            <Col>\n                                <Input\n                                    type=\"test\"\n                                    name=\"title\"\n                                    value={newTaskValues.name}\n                                    onChange={(e) => inputTaskName(e.target.value)}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col sm=\"2\">\n                                <Label className=\"float-right\">Description</Label>\n                            </Col>\n                            <Col>\n                                <Input\n                                    type=\"textarea\"\n                                    name=\"text\"\n                                    id=\"exampleText\"\n                                    placeholder={newTaskValues.description}\n                                    onChange={(e) => inputTaskDescription(e.target.value)}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col sm=\"2\">\n                                <Label className=\"float-right\">Priority</Label>\n                            </Col>\n                            <Col sm=\"2\">\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\"\n                                       onChange={(e) => selectPriority(e.target.value)}>\n                                    <option>Low</option>\n                                    <option>Mid</option>\n                                    <option>High</option>\n                                    >\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={saveNewTask} disabled={!submitActive}>Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n}\n\nexport default NewTask;\n","import React, {useState} from 'react';\nimport {Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\n\nfunction TaskDetailsView(props) {\n\n  const {\n    toggle,\n    changeTaskValues,\n    toggleDeleteConfirm,\n    taskDetails,\n    setTaskDetails,\n    openTaskView,\n  } = props;\n\n  const [editDisabled, setEditDisabled] = useState(true);\n\n  const inputNameHandler = (val) => {\n    setTaskDetails({...taskDetails, name : val })\n  };\n\n  const inputDescrHandler = (val) => {\n    setTaskDetails({...taskDetails, description : val })\n  };\n\n  const inputPriorHandler = (val) => {\n    setTaskDetails({...taskDetails, priority : val })\n  };\n\n  const inputEditHandler = () => {\n    editDisabled ? setEditDisabled(false) : (changeCurrentTask());\n  };\n\n  const changeCurrentTask = () => {\n    changeTaskValues(taskDetails);\n    setEditDisabled(true);\n    toggle();\n  };\n\n  const deleteButtonHandler = () => {\n    toggleDeleteConfirm();\n    toggle();\n  }\n\n\n  return (\n    <div>\n        <Modal isOpen={openTaskView} toggle={toggle} className=' modal-big'>\n          <ModalHeader toggle={toggle}>Task details</ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup row>\n                <Col sm=\"2\">\n                  <Label className=\"float-right\">Title</Label>\n                </Col>\n                <Col>\n                  <Input\n                      disabled={editDisabled}\n                      type=\"test\"\n                      name=\"title\"\n                      value={taskDetails.name}\n                      onChange={(e) => inputNameHandler(e.target.value)}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col sm=\"2\">\n                  <Label className=\"float-right\" >Description</Label>\n                </Col>\n                <Col>\n                  <Input\n                      disabled={editDisabled}\n                      value={taskDetails.description}\n                      type=\"textarea\"\n                      className=\" textarea\"\n                      name=\"text\"\n                      id=\"exampleText\"\n                      onChange={(e) => inputDescrHandler(e.target.value)}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col sm=\"2\">\n                  <Label className=\"float-right\">Priority</Label>\n                </Col>\n                <Col sm=\"2\">\n                  <Input type=\"select\" disabled={editDisabled} id=\"exampleSelect\"\n                         value={taskDetails.priority}\n                         onChange={(e)=>inputPriorHandler(e.target.value)}\n                  >\n                    <option>Low</option>\n                    <option>Mid</option>\n                    <option>High</option>>\n                  </Input>\n                </Col>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter row>\n            <Col>\n            <Button color=\"danger\" className=\"float-left\" onClick={deleteButtonHandler}>Delete Task</Button>\n            </Col>\n            <Button color=\"primary\" onClick={inputEditHandler}>{editDisabled ? 'Edit': 'Save'}</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n    </div>\n  );\n}\n\nexport default TaskDetailsView;\n","import React from 'react';\nimport {FiAlertTriangle, FiChevronsLeft, FiChevronsRight, FiTrash2, FiChevronUp, FiChevronDown} from \"react-icons/fi\";\nimport {Button, Col, Label, ListGroupItem, Row} from \"reactstrap\";\n\nconst TaskCard = (props) => {\n\n    const {\n        task,\n        idx,\n        taskIdx,\n        changeTaskStatus,\n        changeTaskQueue,\n        openTask,\n        taskGroup,\n        toggleDeleteConfirm,\n        setTaskDetails\n    } = props;\n\n    const priorityColors = {\n        Low: \"light\",\n        Mid: \"warning\",\n        High: \"danger\"\n    }\n\n    console.log()\n\n    const leftButtonDisplays = (i) => i === 0 ? ' hidden' : '';\n    const rightButtonDisplays = (i) => i === taskGroup.status.length - 1 ? ' hidden' : '';\n\n    const buttonRightHandler = () => {\n        changeTaskStatus( idx, taskIdx, +1);\n    };\n\n    const buttonLeftHandler = () => {\n        changeTaskStatus(idx, taskIdx, -1);\n    };\n\n    const buttonUptHandler = () => {\n        changeTaskQueue( idx, taskIdx, -1);\n    };\n\n    const buttonDownHandler = () => {\n        changeTaskQueue(idx, taskIdx, +1);\n    };\n\n    const onTaskClickHandler = () => {\n        openTask(task);\n    };\n\n    const deleteHandler = () => {\n        setTaskDetails(task);\n        toggleDeleteConfirm();\n    };\n\n\n    return (\n        <div>\n            <ListGroupItem className=\"bg-light\">\n                <Row\n                    // className=\"pointer\" onClick={onTaskClickHandler}\n                    >\n                    <Col xs=\"2\">\n                        <button\n                            className=\"border-0\"\n                            color=\"secondary\"\n                            onClick={buttonUptHandler}>\n                            <FiChevronUp/>\n                        </button>\n                        <button\n                            className=\"border-0\"\n                            color=\"secondary\"\n                            onClick={buttonDownHandler}>\n                            <FiChevronDown/>\n                        </button>\n                    </Col>\n                    <Col lg=\"10\">\n                        <Label className=\"pointer overflow-name text-left\" onClick={onTaskClickHandler}>\n                            <strong >{task.name}</strong>\n                        </Label>\n                        <p>\n                        <FiAlertTriangle className={priorityColors[task.priority] + \" text-xs-right\"}/>\n                            <i> details...</i></p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button\n                            color=\"secondary\"\n                            outline\n                            size=\"sm\"\n                            onClick={buttonLeftHandler}\n                            className={leftButtonDisplays(idx) + ' pointer float-left'}><FiChevronsLeft/></Button>\n                    </Col>\n                    <Col>\n                        <Col>\n                            <Button onClick={deleteHandler} pill className='float-right' size=\"sm\"\n                                    color='danger'><FiTrash2/></Button>\n                        </Col>\n                    </Col>\n                    <Col>\n                        <Button\n                            color=\"secondary\"\n                            outline\n                            size=\"sm\"\n                            onClick={buttonRightHandler}\n                            className={rightButtonDisplays(idx) + ' pointer float-right'}><FiChevronsRight/></Button>\n                    </Col>\n                </Row>\n            </ListGroupItem>\n        </div>\n    );\n};\n\nexport default TaskCard;","import React from 'react';\nimport {Col, ListGroup, ListGroupItem } from 'reactstrap';\nimport TaskCard from \"./TaskCard\";\n\nfunction StatusColumn (props) {\n\n    const {\n        idx,\n        name,\n        taskList,\n        taskGroup,\n        changeTaskStatus,\n        changeTaskQueue,\n        openTask,\n        setTaskDetails,\n        toggleDeleteConfirm\n    } = props;\n\n    return (\n        <Col md='3' className=\"px-md-1 border mt-3\" >\n            <ListGroup>\n                <ListGroupItem color={taskGroup.colors[idx]} className=\"border-top\">\n                    <h5>{name}</h5>\n                </ListGroupItem>\n                 {taskList && taskList.map((task, taskIdx) =>\n                     <TaskCard key={task.id}\n                               task={task}\n                               id={task.id}\n                               idx={idx}\n                               taskGroup={taskGroup}\n                               taskIdx={taskIdx}\n                               toggleDeleteConfirm={toggleDeleteConfirm}\n                               setTaskDetails={setTaskDetails}\n                               changeTaskStatus={changeTaskStatus}\n                               changeTaskQueue={changeTaskQueue}\n                               openTask={openTask} />\n                 )}\n            </ListGroup>\n        </Col>\n    );\n}\n\nexport default StatusColumn;\n","import React from 'react';\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\n\nfunction DeleteConfirmModal(props) {\n\n    const {\n        removeTask,\n        openDeleteConfirm,\n        toggleDeleteConfirm\n    } = props;\n\n    const deleteButtonHandler = () => {\n        removeTask();\n        toggleDeleteConfirm();\n    }\n\n\n    return (\n        <div>\n            <Modal isOpen={openDeleteConfirm} toggle={toggleDeleteConfirm}>\n                <ModalHeader toggle={toggleDeleteConfirm}>Are you sure?</ModalHeader>\n                <ModalBody>\n                    Do you really want to delete this task?\n                    This process cannot be undone.\n                </ModalBody>\n                <ModalFooter row>\n                    <Button color=\"primary\" onClick={deleteButtonHandler}>Delete</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggleDeleteConfirm}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n}\n\nexport default DeleteConfirmModal;\n","import React, {useState} from 'react';\nimport {Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\n\nfunction NewGroupModal(props) {\n\n    const {\n        taskList,\n        setTaskList,\n        taskGroup,\n        setTaskGroup,\n        newGroupModal,\n        setNewGroupModal\n    } = props;\n\n    const [newGroupName, setNewGroupName] = useState('');\n    const [submitActive, setSubmitActive] = useState(false)\n\n    const inputGroupName = (name) => {\n            setNewGroupName(name);\n        if (name.length > 0) {\n            setSubmitActive(true)\n        }else setSubmitActive(false)\n    };\n\n\n    const saveNewGroup = () => {\n        const newTemp = {...taskGroup};\n        const newTask = [...taskList];\n        newTask.push([]);\n        newTemp.status.push(newGroupName);\n        newTemp.colors.push('secondary');\n        setTaskGroup({...newTemp});\n        setTaskList(newTask);\n        toggle();\n    };\n\n    const toggle = () => {\n        setNewGroupName('');\n        setNewGroupModal(!newGroupModal);\n        setSubmitActive(false)\n    };\n\n    return (\n        <div>\n            <Modal isOpen={newGroupModal} toggle={toggle} >\n                <ModalHeader toggle={toggle}>Create new group</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup row>\n                            <Col sm=\"2\">\n                                <Label className=\"float-right\">Title</Label>\n                            </Col>\n                            <Col>\n                                <Input\n                                    type=\"test\"\n                                    name=\"title\"\n                                    value={newGroupName}\n                                    onChange={(e) => inputGroupName(e.target.value)}/>\n                            </Col>\n                        </FormGroup>\n                        {/*<FormGroup row>*/}\n                        {/*    <Col sm=\"2\">*/}\n                        {/*        <Label className=\"float-right\">Priority</Label>*/}\n                        {/*    </Col>*/}\n                        {/*    <Col sm=\"2\">*/}\n                        {/*        <Input type=\"select\" name=\"select\" id=\"exampleSelect\"*/}\n                        {/*               onChange={(e) => selectPriority(e.target.value)}>*/}\n                        {/*            <option>Low</option>*/}\n                        {/*            <option>Mid</option>*/}\n                        {/*            <option>High</option>*/}\n                        {/*            >*/}\n                        {/*        </Input>*/}\n                        {/*    </Col>*/}\n                        {/*</FormGroup>*/}\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={saveNewGroup} disabled={!submitActive}>Create</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n}\n\nexport default NewGroupModal;\n","import React from 'react';\nimport { ListGroupItem, Col, Row, Button } from 'reactstrap';\nimport {FiChevronUp, FiChevronDown, FiTrash2} from \"react-icons/fi\";\n\n\nfunction GroupItem(props) {\n\n    const {\n        el,\n        idx,\n        color,\n        changeOrder,\n        removeGroup,\n        taskGroup\n    } = props;\n\n\n    return (\n        <ListGroupItem color={color} >\n            <Row className=\"p-0\">\n                <Col>\n                    {el}\n                </Col>\n                <Col>\n                    <div className=\"m-0\">\n                        {(idx !== 0) ?\n                            <FiChevronUp\n                                className=\"d-block pointer\"\n                                onClick={() => changeOrder(idx, -1)}\n                            /> : <FiChevronUp className=\" d-block inactive\"/>}\n                    </div>\n                    <div className=\"m-0\">\n                        {(idx !== taskGroup.status.length - 1) ?\n                            <FiChevronDown\n                                className=\"d-block pointer\"\n                                onClick={() => changeOrder(idx, +1)}\n                            /> : <FiChevronDown className=\" d-block inactive\"/>}\n                    </div>\n                </Col>\n                <Button onClick={()=>removeGroup(idx)} pill className='float-right' size=\"sm\"\n                        color='danger'><FiTrash2/></Button>\n\n            </Row>\n        </ListGroupItem>\n    )\n}\n\nexport default GroupItem;\n","import React from 'react';\nimport {Button, ListGroup,Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\nimport GroupItem from \"./GroupItem\";\n\nfunction ManageGroupsModal(props) {\n\n    const {\n        taskList,\n        setTaskList,\n        taskGroup,\n        setTaskGroup,\n        // newGroupModal,\n        // setNewGroupModal,\n        manageModal,\n        setManageModal\n    } = props;\n\n    const changeOrder = (idx, dif) => {\n        const arr1 = [...taskGroup.status];\n        const arr2 = [...taskGroup.colors];\n        const arr3 = [...taskList];\n        arr1.splice(idx, 1)\n        arr1.splice(idx + dif, 0, taskGroup.status[idx])\n        arr2.splice(idx, 1)\n        arr2.splice(idx + dif, 0, taskGroup.colors[idx])\n        arr3.splice(idx, 1)\n        arr3.splice(idx + dif, 0, taskList[idx])\n        setTaskGroup({status: arr1, colors: arr2})\n        setTaskList(arr3)\n        console.log(arr1, arr2, arr3, idx + dif)\n    };\n\n    const removeGroup = (idx) => {\n        const arr1 = [...taskGroup.status];\n        const arr2 = [...taskGroup.colors];\n        const arr3 = [...taskList];\n        arr1.splice(idx, 1)\n        arr2.splice(idx, 1)\n        arr3.splice(idx, 1)\n        setTaskGroup({status: arr1, colors: arr2})\n        setTaskList(arr3)\n    };\n\n    const toggle = () => {\n        setManageModal(!manageModal);\n    };\n\n    return (\n        <div>\n            <Modal isOpen={manageModal} toggle={toggle} >\n                <ModalHeader toggle={toggle}>Manage groups</ModalHeader>\n                <ModalBody>\n                    <ListGroup>\n                        {taskGroup.status.map(( el, i )=>\n                            <GroupItem\n                                key={i}\n                                el={el}\n                                idx={i}\n                                changeOrder={changeOrder}\n                                removeGroup={removeGroup}\n                                taskGroup={taskGroup}\n                                color={taskGroup.colors[i]}/>\n                        )}\n                     </ListGroup>\n                </ModalBody>\n                <ModalFooter>\n                    {/*<Button color=\"primary\" onClick={saveNewGroup} disabled={!submitActive}>Create</Button>{' '}*/}\n                    <Button color=\"secondary\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ManageGroupsModal;\n","import React, {useState} from 'react';\nimport {Button, Col, Container, Row} from 'reactstrap';\nimport { tasks, status, colors } from './tasks';\nimport NewTask from \"./NewTask\";\nimport TaskDetailsView from \"./TaskDetailsView\";\nimport StatusColumn from \"./StatusColumn\";\nimport DeleteConfirmModal from \"./DeleteConfirmModal\";\nimport NewGroupModal from \"./NewGroupModal\";\nimport ManageGroupsModal from \"./ManageGroupsModal\";\n\n\nfunction Board() {\n\n    const emptyFields = {name: '', description: ''};\n    const [newTaskValues, setNewTaskValues] = useState(emptyFields);\n    const [taskList, setTaskList] = useState([...tasks]);\n    const [modal, setModal] = useState(false);\n    const [newGroupModal, setNewGroupModal] = useState(false);\n    const [openTaskView, setOpenTaskView] = useState(false);\n    const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\n    const [taskDetails, setTaskDetails] = useState({});\n    const [taskGroup, setTaskGroup] = useState({status: [...status], colors: [...colors]});\n    const [manageModal, setManageModal] = useState(false);\n\n\n    const addNewTask = (obj) => {\n        const arr = [...taskList];\n        arr.push(obj);\n        setTaskList([...arr]);\n        toggleNewTask();\n    };\n\n    const openTask = (obj) => {\n        setTaskDetails({...obj})\n        toggleTaskDetail();\n    };\n\n    const changeTaskStatus = (idx, taskIdx, diff) => {\n        const arr = [...taskList];\n        const movedTask = arr[idx].splice(taskIdx, 1);\n        arr[idx + diff].push(movedTask[0]);\n        setTaskList(arr)\n    };\n\n    const changeTaskQueue = (idx, taskIdx, diff) => {\n        const arr = [...taskList];\n        const movedTask = arr[idx].splice(taskIdx, 1);\n        arr[idx].splice(taskIdx + diff, 0, movedTask[0]);\n        setTaskList(arr)\n    };\n\n    const changeTaskValues = (obj) => {\n        const changedTask = [...taskList].map(task => task.map(el => el.id === taskDetails.id ? {...obj} : el));\n        setTaskList([...changedTask]);\n    };\n\n    const removeTask = () => {\n        const changedTaskList = [...taskList].map(task => task.filter(el => el.id !== taskDetails.id));\n        setTaskList(changedTaskList);\n    };\n\n    const toggleTaskDetail = () => setOpenTaskView(!openTaskView);\n    const toggleManageGroup = () => setManageModal(!manageModal);\n    const toggleNewGroupModal = () => setNewGroupModal(true);\n    const toggleDeleteConfirm = () => setOpenDeleteConfirm(!openDeleteConfirm);\n    const toggleNewTask = () => setModal(!modal);\n\n\n    return (\n        <Container className=\"themed-container\" fluid=\"lg\">\n            <Row>\n                <Col md='4' className=\" px-md-1 \">\n                    <Button color=\"primary\" onClick={toggleNewTask} className=\"float-left mr-1\">New task</Button>\n                    <Button color=\"primary\" onClick={toggleNewGroupModal} className=\"float-left mr-1\">New group</Button>\n                    <Button color=\"primary\" onClick={toggleManageGroup} className=\"float-left mr-1\">Manage groups</Button>\n                </Col>\n                <Col md='2' className=\" px-md-1\">\n                </Col>\n                <Col md='6' className=\" px-md-1\">\n                    <a href='https://github.com/aliksayf/react-kanban-board/issues' target=\"_blank\">\n                        <Button color=\"secondary\" outline className=\"float-right\">Report issue</Button>\n                    </a>\n                </Col>\n            </Row>\n            <Row>\n                {taskGroup.status.map((el, idx) =>\n                    <StatusColumn key={idx}\n                                  idx={idx}\n                                  name={el}\n                                  changeTaskStatus={changeTaskStatus}\n                                  changeTaskQueue={changeTaskQueue}\n                                  removeTask={removeTask}\n                                  setTaskDetails={setTaskDetails}\n                                  openTask={openTask}\n                                  toggleDeleteConfirm={toggleDeleteConfirm}\n                                  taskGroup={taskGroup}\n                                  taskList={taskList[idx]}/>\n                )}\n            </Row>\n\n            <NewTask addNewTask={addNewTask}\n                     toggleNewTask={toggleNewTask}\n                     newTaskValues={newTaskValues}\n                     setNewTaskValues={setNewTaskValues}\n                     modal={modal}/>\n\n            <NewGroupModal\n                taskGroup={taskGroup}\n                setTaskGroup={setTaskGroup}\n                taskList={taskList}\n                setTaskList={setTaskList}\n                newGroupModal={newGroupModal}\n                setNewGroupModal={setNewGroupModal}/>\n\n            <TaskDetailsView addNewTask={addNewTask}\n                             toggle={toggleTaskDetail}\n                             taskDetails={taskDetails}\n                             setTaskDetails={setTaskDetails}\n                             toggleDeleteConfirm={toggleDeleteConfirm}\n                             removeTask={removeTask}\n                             changeTaskValues={changeTaskValues}\n                             openTaskView={openTaskView}/>\n\n            <ManageGroupsModal taskGroup={taskGroup}\n                               setTaskGroup={setTaskGroup}\n                               taskList={taskList}\n                               setTaskList={setTaskList}\n                               manageModal={manageModal}\n                               setManageModal={setManageModal}\n            />\n\n            <DeleteConfirmModal toggleDeleteConfirm={toggleDeleteConfirm}\n                                openDeleteConfirm={openDeleteConfirm}\n                                removeTask={removeTask}/>\n        </Container>\n    );\n}\n\nexport default Board;\n","import React, { StrictMode } from 'react';\nimport Board from './Board';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './custom.css';\n\n\nfunction App() {\n    return (\n        <StrictMode>\n            <h1 className=\"text-center display-5\">Kanban board</h1>\n            <Board/>\n        </StrictMode>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport './custom.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}